# Papyrus2D プロジェクト実装ルール

Papyrus2Dはpaper.jsから幾何部分を抽出するプロジェクトです。
とにかくpaper.jsのコードを優先するようにしてください。/paper.js/にあります。

## 基本方針
1. **コード流用と改良**：
   - バグを減らすため、まず paper.js ディレクトリから既存のコードベースを流用する
   - 既存コードの動作を理解し、基本的なアルゴリズムと構造を維持する
   - ただし、流用する際に透明性や保守性に問題があるコードは改良する
   - コードの流用を行う際には、省略は決してしない
   - テストもなるべくpaper.jsに従う
   - typescriptでnullableであるというようなエラーが出る場合、paper.jsでその判定をしていないのならば普通に!を使ってください。エラーが遅れるよりnullエラーになるほうが適切

2. **グローバル状態の排除**：
   - Paper.js の PaperScope のようなグローバル状態管理は使用しない
   - すべてのオブジェクトは明示的に作成・管理する
   - 隠れた依存関係や副作用を避ける

3. **イミュータブル設計**：
   - 基本クラス（Point, Rectangle, Matrix など）はイミュータブルに設計する
   - 変更操作は新しいオブジェクトを返す形で実装する
   - ただし、path/以下はpaper.jsにあわせてミュータブル設計とする。

4. **機能の絞り込み**：
   - レンダリングやDOM関連のコードは完全に除去する
   - 純粋な幾何学計算と操作のみに機能を絞る
   - 必要最小限のコードで高性能な幾何学演算ライブラリを目指す

## コードの細かい話

requireは使うな。コードの先頭ブロックにimportを入れろ。

## プロジェクトドキュメント

プロジェクトを理解し実装を進めるには、まず以下のドキュメントを順に参照してください。すべてのドキュメントは `documents/` ディレクトリに格納されています。

プロジェクトルート/paper.jsは本家paper.jsのプロジェクトが入っているシンボリックリンクです、/paper.js/src/path/Path.jsなどで内容取得可能です。

### 主要ドキュメントの説明

1. **implementation_plan.md**
   - プロジェクトの概要、目的、設計原則を詳細に記述

## テスト実行

  % npm test filename

テストの際はなるべくpaper.jsの実装を正とし、paper.jsとアルゴリズムが等しいならテストコードを疑ってください。
何らかの即値を使いたいときは、pythonで計算するなどしてなるべくもっともらしい値を使ってください。
